{"version":3,"sources":["Components/ArticlesList.js","Components/Article.js","Components/Login.js","App.js","serviceWorker.js","index.js"],"names":["ArticlesList","setData","_callee","e","api_url","data","el","regenerator_default","a","wrap","_context","prev","next","fetch","concat","sent","json","find","x","id","_this","props","setTitle","title","setDescription","body","nextPage","stop","deleteFeed","_callee2","i","arr","_context2","articles","splice","setState","eachItem","react_default","createElement","key","className","onClick","Fragment","this","map","React","Component","Article","description","Login","state","page","wrongUsername","userId","prevPage","setUserId","username","value","checkUser","search","user","preventDefault","target","elements","login","getArticles","length","onSubmit","style","display","type","name","placeholder","Components_ArticlesList","Components_Article","App","Components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c26808f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './css/articlesList.css';\r\n\r\n\r\nclass ArticlesList extends React.Component {\r\n\r\n  setData = async (e) => {\r\n    const api_url = await fetch(`https://jsonplaceholder.typicode.com/posts?id=${e}`);\r\n    const data = await api_url.json();\r\n    let el = data.find(x => x.id);\r\n    this.props.setTitle(el.title);\r\n    this.props.setDescription(el.body);\r\n    this.props.nextPage();\r\n  }\r\n\r\n  deleteFeed = async (e, i) => {\r\n    //server delete\r\n    const api_url = await fetch(`https://jsonplaceholder.typicode.com/posts`);\r\n    const data = await api_url.json();\r\n    delete data[e-1];\r\n    //program delete\r\n    let arr = this.props.articles;\r\n    arr.splice(i, 1);\r\n    this.setState({articles: arr});\r\n  }\r\n\r\n  eachItem = (el, i) => {\r\n    return (\r\n        <div key={el.id} className='item'>\r\n          <li className='item__body' onClick = {() => this.setData(el.id)}>{ el.title }</li>\r\n          <button onClick = {() => this.deleteFeed(el.id, i)} className='item__btn-delete'><i className=\"far fa-times-circle\"></i></button>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let index = 0;\r\n    return(\r\n      <React.Fragment>\r\n        <h2 className='list__header'><strong>News</strong></h2>\r\n        <ul className='list'><strong>\r\n          { this.props.articles.map (this.eachItem, index) }\r\n        </strong></ul>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ArticlesList;\r\n","import React from 'react';\r\nimport './css/article.css';\r\n\r\nclass Article extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className='article__container'>\r\n       <h3 className='article__header'>{this.props.title}</h3>\r\n       <p className='article__body'>{this.props.description}</p>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport ArticlesList from \"./ArticlesList\";\r\nimport Article from './Article';\r\nimport './css/login.css'\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    page: 1,\r\n    wrongUsername: false,\r\n    userId: 0,\r\n    description: '',\r\n    title: '',\r\n    articles: []\r\n  };\r\n\r\n  nextPage = () => {\r\n    const { page } = this.state;\r\n    this.setState({ page: page + 1 });\r\n  };\r\n\r\n  prevPage = () => {\r\n    const { page } = this.state;\r\n    this.setState({ page: page - 1 });\r\n  };\r\n\r\n  setUserId = (username) => {\r\n    this.setState({ userId: username });\r\n  };\r\n\r\n  setDescription = (value) => {\r\n    this.setState({ description: value });\r\n  }\r\n\r\n  setTitle = (value) => {\r\n    this.setState({ title: value });\r\n  }\r\n\r\n  checkUser = async (e) => {\r\n    e.preventDefault();\r\n    const search = e.target.elements.login.value;\r\n    const api_url = await fetch(`https://jsonplaceholder.typicode.com/users`);\r\n    const data = await api_url.json();\r\n    let user = data.find(x => x.username === search);\r\n    if (user) {\r\n        this.setUserId(user.id);\r\n        this.getArticles();\r\n        this.nextPage();\r\n      } else {\r\n        this.setState({ wrongUsername: true  });\r\n      }\r\n  }\r\n\r\n  getArticles = async () => {\r\n    const api_url = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${this.state.userId}`);\r\n    const data = await api_url.json();\r\n    let arr = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      arr[i] = data[i];\r\n    }\r\n    this.setState({ articles: arr });\r\n  }\r\n\r\n  render() {\r\n    const { page } = this.state;\r\n\r\n    switch (page) {\r\n      case 1:\r\n        return(\r\n          <form onSubmit={this.checkUser} className='form'>\r\n            <h3>Log in</h3>\r\n            <p style={{display: this.state.wrongUsername ? 'block' : 'none' }}>User not found. Try again</p>\r\n            <input type=\"text\" className='form__input' name=\"login\" placeholder=\"username\" />\r\n            <button className='form__btn'>Login</button>\r\n          </form>\r\n        );\r\n\r\n      case 2:\r\n        return(\r\n          <React.Fragment>\r\n            <ArticlesList\r\n              nextPage={this.nextPage}\r\n              prevPage={this.prevPage}\r\n              user={this.state.userId}\r\n              articles={this.state.articles}\r\n              setDescription={this.setDescription}\r\n              setTitle={this.setTitle}\r\n            />\r\n            <button className='form__btn' onClick={this.prevPage}>Back</button>\r\n          </React.Fragment>\r\n        );\r\n\r\n      case 3:\r\n        return(\r\n          <React.Fragment>\r\n            <Article\r\n              title={this.state.title}\r\n              description={this.state.description}\r\n            />\r\n            <button className='form__btn' onClick={this.prevPage}>Back</button>\r\n          </React.Fragment>\r\n        );\r\n\r\n      default:\r\n        this.setState({\r\n          page: 1\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Login from \"./Components/Login\";\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Login />\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}